mocked_first_question = (
    '- Busca em profundidade: Percorre todos os filhos de um vertice antes de ir para um vértice do mesmo nível, '
    'empilha todos os vértices, logo consegue descobrir até mesmo os que estão desconexos.\n'
    '- Busca em largura (ou extensão): Busca em todos os vértices no mesmo nível que o dele, antes de se aprofundar no '
    'grafo, um uso comum comentado em aula foi o de uma arvore de inteligencia de uma IA.\n'
    '- Busca por custo uniforme (menor primeiro): Sempre vai para o vertice de menor custo independente de aquele ser o'
    ' menor caminho, é mais performático do que uma busca heuristica porém menos precisa, pois não necessáriamente vai '
    'encontrar o menor caminho\n'
    '- Busca em aprofundamento iterativo: Junta a busca em largura e em profundidade tenta varios caminhos, sempre '
    'deixando um "custo" a ser batido para chegar até o destino\n'
    '- Busca heurística gulosa (pelo melhor primeiro): Parecida com o custo uniforme porém com uma função heuristica '
    'baseada no destino como por exemplo a distância em linha reta entre os dois vertices para definir um caminho mais '
    'preciso.\n'
    '- Busca A\*: A melhor estratégia dentre todas as citadas para enccontrar um destino, ela vai, de certeza '
    'encontrar o menor caminho, porém isso tem um custo. Ela vai expandindo sempre o menor custo da soma da distancia '
    'atual e da heuristica e o algoritimo só termina quando for achado o vertice destino e o mesmo tenha o menor custo '
    'na arvore de expansão inteira.\n'
)

mocked_relation_file = (
        'A R\n'
        'A B 73\n'
        'A C 64\n'
        'A D 89\n'
        'A E 104\n'
        'B K 83\n'
        'C I 64\n'
        'D N 89\n'
        'E J 40\n'
        'F I 31\n'
        'F N 84\n'
        'G J 35\n'
        'G Q 113\n'
        'H K 35\n'
        'H L 36\n'
        'I L 28\n'
        'I M 20\n'
        'J N 53\n'
        'J Q 80\n'
        'L P 63\n'
        'M O 50\n'
        'O P 41\n'
        'O R 72\n'
        'P R 65\n'
        'Q R 65'
    )
mocked_heuristic_cost_file = (
        'A 230\n'
        'B 182\n'
        'C 179\n'
        'D 165\n'
        'E 166\n'
        'F 160\n'
        'G 155\n'
        'H 137\n'
        'I 117\n'
        'J 115\n'
        'K 113\n'
        'L 100\n'
        'M 97\n'
        'N 73\n'
        'O 70\n'
        'P 61\n'
        'Q 61\n'
        'R 0'
    )